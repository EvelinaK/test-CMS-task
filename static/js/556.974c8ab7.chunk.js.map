{"version":3,"file":"static/js/556.974c8ab7.chunk.js","mappings":"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","sources":["components/Card/index.js","components/Card/styled.js","components/TableComponent/index.js","components/TableComponent/styled.js","tabs/dummyTable.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import React from 'react';\nimport { Container } from './styled';\n\nconst DashboardCard = ({ flex, height, children }) => {\n  const styles = {\n    flex,\n    height,\n    children,\n  };\n  return <Container {...styles}>{children}</Container>;\n};\n\nexport default DashboardCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex: ${props => props.flex};\n  padding: 45px 32px 16px 32px;\n  border-radius: 4px;\n  background-color: #242731;\n  height: ${props => props.height + 'px' || '100%'};\n`;\n","import React, { useState, useMemo, memo } from 'react';\nimport {\n  Box,\n  Skeleton,\n  Table as MuiTable,\n  TableHead,\n  TableRow,\n  TableBody,\n} from '@mui/material';\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport {\n  StyledTableRow,\n  StyledTableCell,\n  BoxTableContainer,\n  HeaderContainer,\n} from './styled';\n\nconst TableComponent = ({\n  data,\n  columns,\n  isFetching,\n  skeletonCount = 10,\n  skeletonHeight = 28,\n  headerComponent,\n\n  onClickRow,\n}) => {\n  const [columnVisibility, setColumnVisibility] = useState({});\n\n  const memoizedData = useMemo(() => data, [data]);\n  const memoizedColumns = useMemo(() => columns, [columns]);\n  const memoisedHeaderComponent = useMemo(\n    () => headerComponent,\n    [headerComponent]\n  );\n\n  const { getHeaderGroups, getRowModel, getAllColumns } = useReactTable({\n    data: memoizedData,\n    columns: memoizedColumns,\n    state: {\n      columnVisibility,\n    },\n    onColumnVisibilityChange: setColumnVisibility,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  const skeletons = Array.from({ length: skeletonCount }, (_, i) => i);\n\n  const columnCount = getAllColumns().length;\n\n  const noDataFound =\n    !isFetching && (!memoizedData || memoizedData.length === 0);\n\n  return (\n    <>\n      <Box paddingX=\"2rem\">\n        {memoisedHeaderComponent && (\n          <HeaderContainer>{memoisedHeaderComponent}</HeaderContainer>\n        )}\n      </Box>\n      <BoxTableContainer>\n        <MuiTable>\n          {!isFetching && (\n            <TableHead>\n              {getHeaderGroups().map(headerGroup => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map(header => (\n                    <StyledTableCell key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n          )}\n          <TableBody>\n            {!isFetching ? (\n              getRowModel().rows.map(row => (\n                <StyledTableRow key={row.id}>\n                  {row.getVisibleCells().map(cell => (\n                    <StyledTableCell\n                      onClick={() => onClickRow?.(cell, row)}\n                      key={cell.id}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </StyledTableCell>\n                  ))}\n                </StyledTableRow>\n              ))\n            ) : (\n              <>\n                {skeletons.map(skeleton => (\n                  <TableRow key={skeleton}>\n                    {Array.from({ length: columnCount }, (_, i) => i).map(\n                      elm => (\n                        <StyledTableCell key={elm}>\n                          <Skeleton height={skeletonHeight} />\n                        </StyledTableCell>\n                      )\n                    )}\n                  </TableRow>\n                ))}\n              </>\n            )}\n          </TableBody>\n        </MuiTable>\n      </BoxTableContainer>\n      {noDataFound && (\n        <Box my={2} textAlign=\"center\">\n          No Data Found\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(TableComponent);\n","import styled from 'styled-components';\nimport {\n  Pagination,\n  styled as style,\n  TableRow,\n  Paper,\n  TableCell,\n  TextField,\n  Box,\n} from '@mui/material';\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px 0 32px;\n`;\n\nexport const StyledTableRow = style(TableRow)`\n  &:nth-of-type(odd) {\n    background-color: transparent;\n  }\n  &:last-child td,\n  &:last-child th {\n    border: 0;\n  }\n  :hover {\n    background-color: #60677a;\n  }\n`;\n\nexport const StyledPagination = style(Pagination)`\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n  color: white;\n`;\nexport const StyledPaper = style(Paper)`\n  background-color: transparent;\n`;\n\nexport const StyledTableCell = style(TableCell)`\n  color: white;\n  border-bottom: none;\n`;\nexport const StyledContainer = style(TableCell)`\n  color: white;\n  border-bottom: none;\n`;\nexport const CssTextField = style(TextField)({\n  '& label.Mui-focused': {\n    color: 'white',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'white',\n  },\n  '& .MuiInputLabel-root': {\n    color: 'white',\n  },\n  '& .MuiOutlinedInput-input': {\n    color: 'white',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'white',\n    },\n    '&:hover fieldset': {\n      borderColor: 'white',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'white',\n    },\n  },\n});\n\nexport const BoxTableContainer = style(Box)`\n  overflow-x: auto;\n  overflow-y: scroll;\n  height: 200px;\n  padding: 0 1rem;\n`;\n\nexport const ModelContainer = styled.div`\n  max-width: 150px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const CardImage = styled.img`\n  display: flex;\n`;\n\nexport const ModelName = styled.span`\n  display: flex;\n  color: white;\n`;\n","import { Box, Typography, styled } from '@mui/material';\nimport React, { useState } from 'react';\n\nimport TableComponent from '../components/TableComponent/index';\nimport DashboardCard from '../components/Card/index';\n\nimport { ModelContainer, ModelName } from '../components/TableComponent/styled';\n\nconst DummyTable = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onClickRow = (cell, rowy) => {};\n  const TypographyContainer = styled(Typography)`\n    padding: 0 12px 12px 0px;\n    font-size: 18px;\n    font-weight: 600;\n    color: rgb(255, 255, 255);\n  `;\n\n  const Header = (\n    <Box display=\"flex\" alignItems=\"center\">\n      <TypographyContainer variant=\"h4\" alignItems=\"center\">\n        General Table\n      </TypographyContainer>\n    </Box>\n  );\n\n  const columns = [\n    {\n      accessorKey: 'model',\n      header: 'Card model',\n      cell: ({ row }) => {\n        return (\n          <ModelContainer>\n            <ModelName>\n              {row.original?.model && row.original.model.name}\n            </ModelName>\n          </ModelContainer>\n        );\n      },\n    },\n    {\n      accessorKey: 'card_name',\n      header: 'card_name',\n    },\n    {\n      accessorKey: 'card_number',\n      header: 'card_number',\n    },\n    {\n      accessorKey: 'date',\n      header: 'date',\n    },\n    {\n      accessorKey: 'limited',\n      header: 'limited',\n    },\n    {\n      accessorKey: 'operations',\n      header: 'operations',\n    },\n    {\n      accessorKey: 'status',\n      header: 'status',\n    },\n    {\n      accessorKey: 'price',\n      header: 'price',\n    },\n    {\n      accessorKey: 'rating',\n      header: 'rating',\n    },\n  ];\n\n  const mockTableData = [\n    {\n      card_name: 'Vmax 330',\n      card_number: '#5',\n      date: '24-12-2018',\n      limited: 4,\n      model: { image: null, name: 'Trading Card Game' },\n      operations: 14,\n      price: '$840',\n      rating: 98,\n      status: '9 out of 10',\n      type: 'Amet minim',\n    },\n    {\n      card_name: 'Vmax 330',\n      card_number: '#5',\n      date: '24-12-2018',\n      limited: 4,\n      model: { image: null, name: 'Trading Card Game' },\n      operations: 14,\n      price: '$840',\n      rating: 98,\n      status: '9 out of 10',\n      type: 'Amet minim',\n    },\n    {\n      card_name: 'Vmax 330',\n      card_number: '#5',\n      date: '24-12-2018',\n      limited: 4,\n      model: { image: null, name: 'Trading Card Game' },\n      operations: 14,\n      price: '$840',\n      rating: 98,\n      status: '9 out of 10',\n      type: 'Amet minim',\n    },\n    {\n      card_name: 'Vmax 330',\n      card_number: '#5',\n      date: '24-12-2018',\n      limited: 4,\n      model: { image: null, name: 'Trading Card Game' },\n      operations: 14,\n      price: '$840',\n      rating: 98,\n      status: '9 out of 10',\n      type: 'Amet minim',\n    },\n  ];\n\n  return (\n    <>\n      <DashboardCard height={400}>\n        <TableComponent\n          data={mockTableData}\n          columns={columns}\n          isFetching={!mockTableData.length}\n          headerComponent={Header}\n          onClickRow={onClickRow}\n          pageCount={currentPage}\n          page={setCurrentPage}\n        />\n      </DashboardCard>\n    </>\n  );\n};\n\nexport default DummyTable;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["_ref","flex","height","children","styles","_jsx","Container","_objectSpread","styled","_templateObject","_taggedTemplateLiteral","props","TableComponent","data","columns","isFetching","_ref$skeletonCount","skeletonCount","_ref$skeletonHeight","skeletonHeight","headerComponent","onClickRow","_useState","useState","_useState2","_slicedToArray","columnVisibility","setColumnVisibility","memoizedData","useMemo","memoizedColumns","memoisedHeaderComponent","_useReactTable","useReactTable","state","onColumnVisibilityChange","getCoreRowModel","getHeaderGroups","getRowModel","getAllColumns","skeletons","Array","from","length","_","i","columnCount","noDataFound","_jsxs","_Fragment","Box","paddingX","HeaderContainer","BoxTableContainer","MuiTable","TableHead","map","headerGroup","TableRow","headers","header","StyledTableCell","isPlaceholder","flexRender","column","columnDef","getContext","id","TableBody","skeleton","elm","Skeleton","rows","row","StyledTableRow","getVisibleCells","cell","onClick","my","textAlign","memo","style","_templateObject2","StyledPagination","Pagination","_templateObject3","StyledPaper","Paper","_templateObject4","TableCell","_templateObject5","StyledContainer","_templateObject6","CssTextField","TextField","color","borderBottomColor","borderColor","_templateObject7","ModelContainer","_templateObject8","CardImage","_templateObject9","ModelName","_templateObject10","currentPage","setCurrentPage","TypographyContainer","Typography","Header","display","alignItems","variant","accessorKey","_row$original","original","model","name","mockTableData","card_name","card_number","date","limited","image","operations","price","rating","status","type","DashboardCard","rowy","pageCount","page","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","overridesResolver","ownerState","root","align","concat","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","font","typography","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","_props$align","className","component","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}